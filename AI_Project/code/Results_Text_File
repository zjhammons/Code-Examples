1. MultinomialNB

    Results before GridSearch and params:

        Training acc:  0.8523809523809524
        Testing acc:  0.827199610041433

    Hyper Parameters for best and score:

        alphas = [.01, .10, .20, .30, .40, .50, .60, .70, .80, .90]
        prior_fit = [True, False]
        grid_search = GridSearchCV(MultinomialNB(), cv=5, param_grid=naive_params)

        Score:  0.8523809523809524
        Best params:  {'alpha': 0.01, 'fit_prior': True}

    Testing using best parameters:
        Training acc:  0.8523809523809524
        Testing acc:  0.827443334145747

    NO CHANGE



2. MLP1

    Results before GridSearch and parameters:

        mlp = MLPClassifier()
        Accuracy score:  0.9273702169144529

    Hyper Parameters for best and score:

        alphas = [.01, .10, .20, .30, .40, .50]
        iteration = [1000, 2000, 3000, 4000, 5000]
        hidden_layer = (100, 200, 300, 400, 500)

        mlp_params =dict(alpha=alphas, max_iter = iteration, hidden_layer_sizes = hidden_layer)
        search = GridSearchCV(MLPClassifier(), cv=5, param_grid=mlp_params)

        Score:  0.9857142857142858
        Best params:  {'alpha': 0.2, 'hidden_layer_sizes': 300, 'max_iter': 5000}

    Testing score using best parameters:

        mlp = MLPClassifier(alpha=0.2, hidden_layer_sizes=300, max_iter=5000)
        Accuracy score:  0.9406531805995613



3. MLP2 more hidden layers

    Results before GridSearch and parameters:

        mlp = MLPClassifier()
        Accuracy score:  0.91786497684621

    Hyper Parameters for best and score:

        alphas = [.01, .10, .20, .30, .40, .50]
        iterations = [4000, 5000]
        hidden_layers = ((100,10), (200,20), (300,30), (100,10,1))

        mlp_params =dict(alpha=alphas, max_iter = iteration, hidden_layer_sizes = hidden_layer)
        search = GridSearchCV(MLPClassifier(), cv=5, param_grid=mlp_params)

        Score:  0.9809523809523809
        Best params:  {'max_iter': 5000, 'hidden_layer_sizes': (300, 30), 'alpha': 0.5}

    Testing score using best parameters:

        mlp = MLPClassifier(alpha=0.5, max_iter=5000, hidden_layer_sizes=(300,30))
        Accuracy score:  0.9313916646356325

4. MLP3 increase hidden layer sizes

    Results before GridSearch and parameters:

        mlp = MLPClassifier()
        Accuracy score:  0.9272483548622958

    Hyper Parameters for best and score:

        alphas = [.01, .10, .20, .30, .40, .50]
        iterations = [4000, 5000]
        hidden_layers = ((100,100), (200,200), (300,300), (100,10,1)))

        mlp_params =dict(alpha=alphas, max_iter = iteration, hidden_layer_sizes = hidden_layer)
        search = GridSearchCV(MLPClassifier(), cv=5, param_grid=mlp_params)

        Score:  1.0
        Best params:  {'hidden_layer_sizes': (300, 300), 'alpha': 0.1, 'max_iter': 5000}

    Testing score using best parameters:

        mlp = MLPClassifier(alpha=0.1, max_iter=5000, hidden_layer_sizes=(300,300))
        Accuracy score:  0.9289544235924933
